version: "3.9"
name: mart

services:
  user-management:
    build: ./user-management
    ports:
      - "8010:8000"
    volumes:
      - ./user-management:/code
    depends_on:
      - user-management-db

  user-management-db:
    image: postgres:latest
    restart: always
    container_name: user-management-db
    environment:
      - POSTGRES_USER=abdullah
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=userdb
    ports:
      - 5440:5432
    volumes:
      - user-management-db:/var/lib/postgresql/data

  product-services:
    build: ./product-services
    ports:
      - "8011:8000"
    volumes:
      - ./product-services:/code
    depends_on:
      - product-db

  product-db:
    image: postgres:latest
    restart: always
    container_name: product-db
    environment:
      - POSTGRES_USER=abdullah
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=productdb
    ports:
      - 5441:5432
    volumes:
      - product-db:/var/lib/postgresql/data

  order-services:
    build: ./order-services
    ports:
      - "8012:8000"
    volumes:
      - ./order-services:/code
    depends_on:
      - order-services-db

  order-services-db:
    image: postgres:latest
    restart: always
    container_name: order-services-db
    environment:
      - POSTGRES_USER=abdullah
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=orderservice
    ports:
      - 5442:5432
    volumes:
      - order-services-db:/var/lib/postgresql/data

  inventory-service:
    build: ./inventory-service
    ports:
      - "8013:8000"
    volumes:
      - ./inventory-service:/code:cached
    depends_on:
      - inventory-db

  inventory-db:
    image: postgres:latest
    restart: always
    container_name: inventory-db
    environment:
      - POSTGRES_USER=abdullah
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=inventorydb
    ports:
      - 5443:5432
    volumes:
      - inventory-db:/var/lib/postgresql/data

  # broker:
  #   image: apache/kafka:3.7.0
  #   hostname: broker
  #   container_name: broker
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_NODE_ID: 1
  #     KAFKA_KRAFT_MODE: "true"
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
  #     KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092"
  #     KAFKA_PROCESS_ROLES: "broker,controller"
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker:29093"
  #     KAFKA_LISTENERS: "CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092"
  #     KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
  #     KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
  #     CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #     KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"

  broker-1:
    image: apache/kafka:3.7.0
    hostname: broker-1
    container_name: broker-1
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_KRAFT_MODE: "true"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker-1:19092"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker-1:29093,2@broker-2:29093,3@broker-3:29093"
      KAFKA_LISTENERS: "CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"

  broker-2:
    image: apache/kafka:3.7.0
    hostname: broker-2
    container_name: broker-2
    ports:
      - "9093:9092"
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_KRAFT_MODE: "true"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT_HOST://localhost:9093,PLAINTEXT://broker-2:19092"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker-1:29093,2@broker-2:29093,3@broker-3:29093"
      KAFKA_LISTENERS: "CONTROLLER://:29093,PLAINTEXT_HOST://:9093,PLAINTEXT://:19092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"

  broker-3:
    image: apache/kafka:3.7.0
    hostname: broker-3
    container_name: broker-3
    ports:
      - "9094:9092"
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_KRAFT_MODE: "true"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT_HOST://localhost:9094,PLAINTEXT://broker-3:19092"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker-1:29093,2@broker-2:29093,3@broker-3:29093"
      KAFKA_LISTENERS: "CONTROLLER://:29093,PLAINTEXT_HOST://:9094,PLAINTEXT://:19092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    depends_on:
      - broker-1
      - broker-2
      - broker-3
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://broker-1:19092,PLAINTEXT://broker-2:19092,PLAINTEXT://broker-3:19092"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "Local Kafka Cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "broker-1:19092,broker-2:19092,broker-3:19092"
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker-1
      - broker-2
      - broker-3

networks:
  default:
    driver: bridge

volumes:
  user-management-db:
  product-db:
  order-services-db:
  inventory-db:
